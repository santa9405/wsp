/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.61
 * Generated at: 2021-01-11 07:40:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class reply_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("/*댓글*/\r\n");
      out.write(".replyWrite>table {\r\n");
      out.write("   width: 90%;\r\n");
      out.write("   margin-top: 100px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#replyContentArea {\r\n");
      out.write("   width: 90%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#replyContentArea > textarea {\r\n");
      out.write("   resize: none;\r\n");
      out.write("   width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#replyBtnArea {\r\n");
      out.write("   width: 100px;\r\n");
      out.write("   text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".rWriter {\r\n");
      out.write("   display: inline-block;\r\n");
      out.write("   margin-right: 30px;\r\n");
      out.write("   vertical-align: top;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".rDate {\r\n");
      out.write("   display: inline-block;\r\n");
      out.write("   font-size: 0.5em;\r\n");
      out.write("   color: gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#replyListArea {\r\n");
      out.write("   list-style-type: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".rContent, .replyBtnArea {\r\n");
      out.write("   height: 100%;\r\n");
      out.write("   width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".replyBtnArea {\r\n");
      out.write("   text-align: right;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".replyUpdateContent {\r\n");
      out.write("   resize: none;\r\n");
      out.write("   width: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".reply-row{\r\n");
      out.write("   border-top : 1px solid #ccc;\r\n");
      out.write("   padding : 15px 0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<div id=\"reply-area \">\r\n");
      out.write("   <!-- 댓글 작성 부분 -->\r\n");
      out.write("   <div class=\"replyWrite\">\r\n");
      out.write("      <table align=\"center\">\r\n");
      out.write("         <tr>\r\n");
      out.write("            <td id=\"replyContentArea\">\r\n");
      out.write("               <textArea rows=\"3\" id=\"replyContent\"></textArea>\r\n");
      out.write("            </td>\r\n");
      out.write("            <td id=\"replyBtnArea\">\r\n");
      out.write("               <button class=\"btn btn-primary\" id=\"addReply\">\r\n");
      out.write("                  댓글<br>등록\r\n");
      out.write("               </button>\r\n");
      out.write("            </td>\r\n");
      out.write("         </tr>\r\n");
      out.write("      </table>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   <!-- 댓글 출력 부분 -->\r\n");
      out.write("   <div class=\"replyList mt-5 pt-2\">\r\n");
      out.write("      <ul id=\"replyListArea\">\r\n");
      out.write("         \r\n");
      out.write("         <!-- 로그인 x 또는 댓글 작성자가 아닌 회원의 화면 -->\r\n");
      out.write("         <li class=\"reply-row\">\r\n");
      out.write("            <div>\r\n");
      out.write("               <p class=\"rWriter\">작성자</p>\r\n");
      out.write("               <p class=\"rDate\">작성일 : 2021년 01월 11일 10:30</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <p class=\"rContent\">댓글 내용1</p>\r\n");
      out.write("         </li>\r\n");
      out.write("\r\n");
      out.write("         \r\n");
      out.write("         <!-- 로그인한 회원이 댓글 작성자인 경우 -->\r\n");
      out.write("         <li class=\"reply-row\">\r\n");
      out.write("            <div>\r\n");
      out.write("               <p class=\"rWriter\">작성자</p>\r\n");
      out.write("               <p class=\"rDate\">작성일 : 2021년 01월 11일 10:30</p>\r\n");
      out.write("            </div>\r\n");
      out.write("\r\n");
      out.write("            <p class=\"rContent\">댓글 내용2</p>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"replyBtnArea\">\r\n");
      out.write("               <button class=\"btn btn-primary btn-sm ml-1\"  onclick=\"showUpdateReply(2, this)\">수정</button>\r\n");
      out.write("               <button class=\"btn btn-primary btn-sm ml-1\"  onclick=\"deleteReply(2)\">삭제</button>\r\n");
      out.write("            </div>\r\n");
      out.write("         </li>\r\n");
      out.write("   \r\n");
      out.write("      </ul>\r\n");
      out.write("   </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var loginMemberId = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("var parentBoardNo = ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boardNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(";\r\n");
      out.write("\r\n");
      out.write("// 페이지 로딩 완료 시 댓글 목록 호출\r\n");
      out.write("$(function(){\r\n");
      out.write("   selectReplyList();\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// 해당 게시글 댓글 목록 조회 함수(ajax)\r\n");
      out.write("function selectReplyList(){\r\n");
      out.write("   $.ajax({\r\n");
      out.write("      url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reply/selectList.do\",\r\n");
      out.write("      data : {\"parentBoardNo\" : parentBoardNo },\r\n");
      out.write("      type : \"post\",\r\n");
      out.write("      dataType : \"JSON\",\r\n");
      out.write("      success : function(rList){\r\n");
      out.write("         //console.log(rList);\r\n");
      out.write("         \r\n");
      out.write("         $(\"#replyListArea\").html(\"\");\r\n");
      out.write("         \r\n");
      out.write("         $.each(rList, function(index, item){\r\n");
      out.write("            var li = $(\"<li>\").addClass(\"reply-row\");\r\n");
      out.write("            var rWriter = $(\"<p>\").addClass(\"rWriter\").text(item.memberId);\r\n");
      out.write("            var rDate = $(\"<p>\").addClass(\"rDate\").text(\"작성일 : \" + item.replyCreateDate);\r\n");
      out.write("            var div = $(\"<div>\");\r\n");
      out.write("            div.append(rWriter).append(rDate);\r\n");
      out.write("            \r\n");
      out.write("            var rContent = $(\"<p>\").addClass(\"rContent\").html(item.replyContent);\r\n");
      out.write("            \r\n");
      out.write("            li.append(div).append(rContent);\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            // 현재 댓글의 작성자와 로그인한 멤버의 아이디가 같을 때 버튼 추가\r\n");
      out.write("            if(item.memberId == loginMemberId){\r\n");
      out.write("               // 수정, 삭제 버튼 영역\r\n");
      out.write("               var replyBtnArea = $(\"<div>\").addClass(\"replyBtnArea\");\r\n");
      out.write("               \r\n");
      out.write("               // ** 추가되는 댓글에 onclick 이벤트를 부여하여 버튼 클릭 시 수정, 삭제를 수행할 수 있는 함수를 이벤트 핸들러로 추가함. \r\n");
      out.write("               var showUpdate = $(\"<button>\").addClass(\"btn btn-primary btn-sm ml-1\").text(\"수정\").attr(\"onclick\", \"showUpdateReply(\"+item.replyNo+\", this)\");\r\n");
      out.write("               var deleteReply = $(\"<button>\").addClass(\"btn btn-primary btn-sm ml-1\").text(\"삭제\").attr(\"onclick\", \"deleteReply(\"+item.replyNo+\")\");\r\n");
      out.write("               \r\n");
      out.write("               replyBtnArea.append(showUpdate).append(deleteReply);\r\n");
      out.write("               \r\n");
      out.write("               li.append(replyBtnArea);\r\n");
      out.write("               \r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            $(\"#replyListArea\").append(li);\r\n");
      out.write("         });\r\n");
      out.write("      },\r\n");
      out.write("      error : function(){\r\n");
      out.write("         console.log(\"댓글 목록 조회 실패\");\r\n");
      out.write("      }\r\n");
      out.write("   });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//-----------------------------------------------------------------------------------------\r\n");
      out.write("\r\n");
      out.write("// 댓글 등록 (ajax)\r\n");
      out.write("\r\n");
      out.write("$(\"#addReply\").on(\"click\", function(){\r\n");
      out.write("   \r\n");
      out.write("   // 댓글 내용을 얻어와서 변수에 저장\r\n");
      out.write("   var replyContent = $(\"#replyContent\").val().trim();\r\n");
      out.write("   \r\n");
      out.write("   // 로그인이 되어있지 않은 경우 == loginMemberId 전역 변수에 저장된 값이 \"\" 일 경우\r\n");
      out.write("   if(loginMemberId == \"\"){\r\n");
      out.write("      alert(\"로그인 후 이용해 주세요.\");\r\n");
      out.write("      \r\n");
      out.write("   } else { // 로그인이 되어있는 경우\r\n");
      out.write("      \r\n");
      out.write("      // 댓글 내용이 작성되어있는지 확인\r\n");
      out.write("      if(replyContent.length == 0){\r\n");
      out.write("         alert(\"댓글 작성 후 클릭해주세요.\");\r\n");
      out.write("      \r\n");
      out.write("      } else { // 로그인도 되어있고, 댓글도  작성되어있는 경우\r\n");
      out.write("         \r\n");
      out.write("         // 회원 번호를 얻어와서 변수에 저장\r\n");
      out.write("         var replyWriter = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${loginMember.memberNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("         \r\n");
      out.write("         $.ajax({\r\n");
      out.write("            url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reply/insertReply.do\",\r\n");
      out.write("            data : {\"replyWriter\" : replyWriter,\r\n");
      out.write("                  \"replyContent\" : replyContent,\r\n");
      out.write("                  \"parentBoardNo\" : parentBoardNo},\r\n");
      out.write("            type : \"post\",\r\n");
      out.write("            \r\n");
      out.write("            success : function(result){\r\n");
      out.write("               if(result >0){ // 댓글 삽입 성공 시\r\n");
      out.write("                  // 댓글 작성 내용 삭제\r\n");
      out.write("                  $(\"#replyContent\").val(\"\");\r\n");
      out.write("               \r\n");
      out.write("                  // 성공 메세지 출력\r\n");
      out.write("                  swal({\"icon\" : \"success\", \"title\" : \"댓글 등록 성공\"});\r\n");
      out.write("                  \r\n");
      out.write("                  // 댓글 목록을 다시 조회 -> 새로 삽입한 댓글도 조회하여 화면에 출력\r\n");
      out.write("                  selectReplyList();\r\n");
      out.write("                  \r\n");
      out.write("               }\r\n");
      out.write("            },\r\n");
      out.write("            error : function(){\r\n");
      out.write("               console.log(\"댓글 등록 실패\");\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("      }\r\n");
      out.write("   }\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// -----------------------------------------------------------------------------------------\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("var beforeReplyRow;\r\n");
      out.write("\r\n");
      out.write("// 댓글 수정 폼 출력 함수\r\n");
      out.write("function showUpdateReply(replyNo, el){\r\n");
      out.write("   \r\n");
      out.write("   //console.log($(\".replyUpdateContent\").length);\r\n");
      out.write("   \r\n");
      out.write("   // 이미 열려있는 댓글 수정 창이 있을 경우 닫아주기\r\n");
      out.write("   if($(\".replyUpdateContent\").length > 0){\r\n");
      out.write("      $(\".replyUpdateContent\").eq(0).parent().html(beforeReplyRow);\r\n");
      out.write("   }\r\n");
      out.write("      \r\n");
      out.write("   \r\n");
      out.write("   // 댓글 수정화면 출력 전 요소를 저장해둠.\r\n");
      out.write("   beforeReplyRow = $(el).parent().parent().html();\r\n");
      out.write("   //console.log(beforeReplyRow);\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   // 작성되어있던 내용(수정 전 댓글 내용) \r\n");
      out.write("   var beforeContent = $(el).parent().prev().html();\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   // 이전 댓글 내용의 크로스사이트 스크립트 처리 해제, 개행문자 변경\r\n");
      out.write("   // -> 자바스크립트에는 replaceAll() 메소드가 없으므로 정규 표현식을 이용하여 변경\r\n");
      out.write("   beforeContent = beforeContent.replace(/&amp;/g, \"&\");   \r\n");
      out.write("   beforeContent = beforeContent.replace(/&lt;/g, \"<\");   \r\n");
      out.write("   beforeContent = beforeContent.replace(/&gt;/g, \">\");   \r\n");
      out.write("   beforeContent = beforeContent.replace(/&quot;/g, \"\\\"\");   \r\n");
      out.write("   \r\n");
      out.write("   beforeContent = beforeContent.replace(/<br>/g, \"\\n\");   \r\n");
      out.write("   //console.log(beforeContent)\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   // 기존 댓글 영역을 삭제하고 textarea를 추가 \r\n");
      out.write("   $(el).parent().prev().remove();\r\n");
      out.write("   var textarea = $(\"<textarea>\").addClass(\"replyUpdateContent\").attr(\"rows\", \"3\").val(beforeContent);\r\n");
      out.write("   $(el).parent().before(textarea);\r\n");
      out.write("   \r\n");
      out.write("   //console.log(replyBtnArea);\r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("   // 수정 버튼\r\n");
      out.write("   var updateReply = $(\"<button>\").addClass(\"btn btn-primary btn-sm ml-1 mb-4\").text(\"댓글 수정\").attr(\"onclick\", \"updateReply(\" + replyNo + \", this)\");\r\n");
      out.write("   \r\n");
      out.write("   // 취소 버튼\r\n");
      out.write("   var cancelBtn = $(\"<button>\").addClass(\"btn btn-primary btn-sm ml-1 mb-4\").text(\"취소\").attr(\"onclick\", \"updateCancel(this)\");\r\n");
      out.write("   \r\n");
      out.write("   var replyBtnArea = $(el).parent();\r\n");
      out.write("   \r\n");
      out.write("   $(replyBtnArea).empty(); \r\n");
      out.write("   $(replyBtnArea).append(updateReply); \r\n");
      out.write("   $(replyBtnArea).append(cancelBtn); \r\n");
      out.write("   \r\n");
      out.write("   \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//-----------------------------------------------------------------------------------------\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// 댓글 수정 함수\r\n");
      out.write("function updateReply(replyNo, el){\r\n");
      out.write("   \r\n");
      out.write("   // 수정된 댓글 내용\r\n");
      out.write("   var replyContent = $(el).parent().prev().val();\r\n");
      out.write("   \r\n");
      out.write("   $.ajax({\r\n");
      out.write("       url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reply/updateReply.do\",\r\n");
      out.write("      type : \"post\",\r\n");
      out.write("      data : {\"replyNo\" : replyNo, \"replyContent\" : replyContent},\r\n");
      out.write("      success : function(result){\r\n");
      out.write("         if(result > 0){\r\n");
      out.write("            \r\n");
      out.write("            selectReplyList(parentBoardNo);\r\n");
      out.write("            \r\n");
      out.write("            swal({\"icon\" : \"success\" , \"title\" : \"댓글 수정 성공\"});\r\n");
      out.write("         }\r\n");
      out.write("         \r\n");
      out.write("      }, error : function(){\r\n");
      out.write("         console.log(\"댓글 수정 실패\");\r\n");
      out.write("      }      \r\n");
      out.write("   });\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//-----------------------------------------------------------------------------------------\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("// 댓글 수정 취소 시 원래대로 돌아가는 함수\r\n");
      out.write("function updateCancel(el){\r\n");
      out.write("   //console.log(beforeReplyRow);\r\n");
      out.write("   $(el).parent().parent().html(beforeReplyRow);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("//-----------------------------------------------------------------------------------------\r\n");
      out.write("\r\n");
      out.write("//댓글 삭제 함수\r\n");
      out.write("function deleteReply(replyNo){\r\n");
      out.write("\t\r\n");
      out.write("\tif(confirm(\"정말로 삭제하시겠습니까?\")){\r\n");
      out.write("      var url = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reply/deleteReply.do\";\r\n");
      out.write("      \r\n");
      out.write("      $.ajax({\r\n");
      out.write("         url : url,\r\n");
      out.write("         data : {\"replyNo\" : replyNo},\r\n");
      out.write("         success : function(result){\r\n");
      out.write("            if(result > 0){\r\n");
      out.write("               selectReplyList(parentBoardNo);\r\n");
      out.write("               \r\n");
      out.write("               swal({\"icon\" : \"success\" , \"title\" : \"댓글 삭제 성공\"});\r\n");
      out.write("            }\r\n");
      out.write("            \r\n");
      out.write("         }, error : function(){\r\n");
      out.write("            console.log(\"ajax 통신 실패\");\r\n");
      out.write("         }\r\n");
      out.write("      });\r\n");
      out.write("   }\r\n");
      out.write("\t\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
